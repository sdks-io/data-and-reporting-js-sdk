/**
 * Shell Data & Reporting APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { ErrorStatus, errorStatusSchema } from './errorStatus';
import { FeeItem, feeItemSchema } from './feeItem';

export interface TransactionFeesResponse {
  feeItems?: FeeItem[];
  /** Current Page */
  currentPage?: number;
  /** Total row count matched for the given input criteria */
  rowCount?: number;
  /** Calculated page count based on page size from the incoming API request and total number of rows matched for the given input criteria */
  totalPages?: number;
  error?: ErrorStatus;
  /** API Request Id */
  requestId?: string;
}

export const transactionFeesResponseSchema: Schema<TransactionFeesResponse> = object(
  {
    feeItems: ['FeeItems', optional(array(lazy(() => feeItemSchema)))],
    currentPage: ['CurrentPage', optional(number())],
    rowCount: ['RowCount', optional(number())],
    totalPages: ['TotalPages', optional(number())],
    error: ['Error', optional(lazy(() => errorStatusSchema))],
    requestId: ['RequestId', optional(string())],
  }
);
