/**
 * Shell Data & Reporting APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';

export interface EIDSearchReq {
  /**
   * Collecting Company Code of the selected payer.
   * Mandatory
   */
  colCoCode: number | null;
  /**
   * Country code (colco code) of the account group.
   * Mandatory
   */
  accountGroupCountry: number | null;
  /**
   * List of IDs of the account groups that user has access to.
   * Mandatory
   */
  accountGroupId: string[];
  /**
   * Account group name
   * Optional.
   * This input is a search criterion, if given.
   */
  accountGroupName?: string | null;
  /**
   * EID date searched from this date.
   * Optional.
   */
  fromDate?: string | null;
  /**
   * Invoice date searched until this date.
   * Optional.
   */
  toDate?: string | null;
  /**
   * Invoice type.
   * Optional.
   * Possible values:
   * •    NAT (National)
   * •    INT (International)
   */
  invoiceType?: string | null;
  /**
   * Status of the document.
   * Optional.
   * Possible values:
   * •    NEW
   * •    VIEWED
   * •    DOWNLOADED
   * •    RESTORED
   */
  invoiceStatus?: string | null;
  /**
   * Sort option –
   * •    InvoiceNumber ASC
   * •    InvoiceDate ASC
   * •    InvoiceNumber DESC
   * •    InvoiceDate DESC
   * Optional
   */
  sortBy?: string[];
}

export const eIDSearchReqSchema: Schema<EIDSearchReq> = object({
  colCoCode: ['ColCoCode', nullable(number())],
  accountGroupCountry: ['AccountGroupCountry', nullable(number())],
  accountGroupId: ['AccountGroupId', array(string())],
  accountGroupName: ['AccountGroupName', optional(nullable(string()))],
  fromDate: ['FromDate', optional(nullable(string()))],
  toDate: ['ToDate', optional(nullable(string()))],
  invoiceType: ['InvoiceType', optional(nullable(string()))],
  invoiceStatus: ['InvoiceStatus', optional(nullable(string()))],
  sortBy: ['SortBy', optional(array(string()))],
});
