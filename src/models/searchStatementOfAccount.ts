/**
 * Shell Data & Reporting APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { nullable, number, object, optional, Schema, string } from '../schema';

export interface SearchStatementOfAccount {
  /** Statement of account identifier */
  statementOfAccountId?: number | null;
  /** Statement of account reference */
  soAReferenceNumber?: string | null;
  /**
   * Date on which the SOA was generated.
   * Format: yyyyMMdd
   */
  statementDate?: string | null;
  /** Payment customer id of the customer. */
  payerId?: number | null;
  /** Payment customer number. */
  payerNumber?: string | null;
  /** Invoiced amount and due for payment */
  amountDue?: number | null;
  /** Invoiced amount and overdue for payment. */
  amountOverdue?: number | null;
  /** ISO code of SOA currency. */
  currencyCode?: string | null;
  /**
   * Symbol of SOA currency.
   * Example: €
   */
  currencySymbol?: string | null;
  /**
   * Due date for payment. Format: yyyyMMdd
   * Note:
   * •    Clients to convert this to appropriate DateTime type.
   * •    SoA due date is considered as the latest due date of the invoices within the SoA
   */
  dueDate?: string | null;
  /**
   * ISO code of the country i.e., UK, DE, MY, etc.
   * This is the value of the first invoice within the SoA. It may not be same for all the invoices within the SoA.
   */
  invoicedOnBehalfOf?: string | null;
  /**
   * Status of the document. Valid values –
   * 1.    Paid – Fully paid all Invoices with in the SOA.
   * 2.    Overdue – At least one invoice payment due date is less than current date with in the SOA.
   * 3.    Due – At least one invoice is due for payment and is within the due date. There is no invoice overdue for payment.
   */
  status?: string | null;
  /** Total gross amount in customer currency. */
  grossAmountCustomerCurrency?: number | null;
  /** Document reference number fetched */
  documentReferenceNumber?: string | null;
}

export const searchStatementOfAccountSchema: Schema<SearchStatementOfAccount> = object(
  {
    statementOfAccountId: [
      'StatementOfAccountId',
      optional(nullable(number())),
    ],
    soAReferenceNumber: ['SoAReferenceNumber', optional(nullable(string()))],
    statementDate: ['StatementDate', optional(nullable(string()))],
    payerId: ['PayerId', optional(nullable(number()))],
    payerNumber: ['PayerNumber', optional(nullable(string()))],
    amountDue: ['AmountDue', optional(nullable(number()))],
    amountOverdue: ['AmountOverdue', optional(nullable(number()))],
    currencyCode: ['CurrencyCode', optional(nullable(string()))],
    currencySymbol: ['CurrencySymbol', optional(nullable(string()))],
    dueDate: ['DueDate', optional(nullable(string()))],
    invoicedOnBehalfOf: ['InvoicedOnBehalfOf', optional(nullable(string()))],
    status: ['Status', optional(nullable(string()))],
    grossAmountCustomerCurrency: [
      'GrossAmountCustomerCurrency',
      optional(nullable(number())),
    ],
    documentReferenceNumber: [
      'DocumentReferenceNumber',
      optional(nullable(string())),
    ],
  }
);
