/**
 * Shell Data & Reporting APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { EIDDocument, eIDDocumentSchema } from './eIDDocument';

export interface EIDDocumentResponse {
  /** UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request. */
  requestId?: string;
  /** Indicates overall status of the request. Allowed values: SUCCESS, FAILED */
  status?: string;
  data?: EIDDocument[];
  /** Number of records returned in the response */
  pageSize?: number;
  /** Current page */
  page?: number;
  /** Total number of pages available for the requested data */
  totalPages?: number;
  /** Total number of elements corresponding to the request */
  totalRecords?: number;
  /** True if it is the first page, false otherwise */
  isFirstPage?: boolean;
  /** True if it is the last page, false, otherwise. */
  isLastPage?: boolean;
}

export const eIDDocumentResponseSchema: Schema<EIDDocumentResponse> = object({
  requestId: ['RequestId', optional(string())],
  status: ['Status', optional(string())],
  data: ['Data', optional(array(lazy(() => eIDDocumentSchema)))],
  pageSize: ['PageSize', optional(number())],
  page: ['Page', optional(number())],
  totalPages: ['TotalPages', optional(number())],
  totalRecords: ['TotalRecords', optional(number())],
  isFirstPage: ['IsFirstPage', optional(boolean())],
  isLastPage: ['IsLastPage', optional(boolean())],
});
