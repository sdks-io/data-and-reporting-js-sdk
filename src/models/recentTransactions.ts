/**
 * Shell Data & Reporting APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';

export interface RecentTransactions {
  /** ColCoCode */
  colCoCode?: number | null;
  /** PayerNumber */
  payerNumber?: string | null;
  /** Account Number */
  accountNumber?: string | null;
  /** Card Issue Number */
  cardIssueNumber?: string | null;
  /** Collecting Company Currency IsoCode */
  collectingCompanyCurrencyCode?: string | null;
  /** Customer entered data for reference. */
  custDataCustomerEntered?: string | null;
  /** Customer Data DriverId */
  custDataDriverId?: string | null;
  /** Cust Data Fleet Description */
  custDataFleetDescription?: string | null;
  /** Fleet Id Input */
  fleetIdInput?: string | null;
  /** Amount */
  amount?: number | null;
  /** EuroshellSiteNumber */
  euroshellSiteNumber?: string | null;
  /** IncomingProductCode */
  incomingProductCode?: string | null;
  /** ProductCode */
  productCode?: string | null;
  /** ProductName */
  productName?: string | null;
  /** SiteCode */
  siteCode?: number | null;
  /** HostingCollectingCompanyName */
  hostingCollectingCompanyName?: string | null;
  /** HostingCollectingCompanyNumber */
  hostingCollectingCompanyNumber?: string | null;
  /** Transaction type code */
  iccdataTranTypeCode?: string | null;
  /** Transaction type description. */
  transactionType?: string | null;
  /** Latitude of the Coordinate 3.11573 */
  latitude?: string | null;
  /** Longitude of the Coordinate */
  longitude?: string | null;
  /** Merchant category */
  merchantCategory?: string | null;
  /** Merchant category description */
  merchantCategoryDescription?: string | null;
  /** Purchased in country */
  purchasedInCountry?: string | null;
  /** Merchant Id */
  merchantId?: string | null;
  /** Site name */
  siteName?: string | null;
  /** Network */
  network?: string | null;
  /** Three character DelcoCode */
  delcoCode?: string | null;
  /** Odometer input */
  odometerInput?: string | null;
  /** Odometer reading in Kms */
  odometerReadingKm?: string | null;
  /** Odometer reading in miles */
  odometerReadingMiles?: string | null;
  /** Masked Card PAN */
  cardPAN?: string | null;
  /** PIN indicator */
  pINIndicator?: string | null;
  /** POIReceiptNumber */
  pOIReceiptNumber?: string | null;
  /** Additinal Products Code */
  productsCodeAdditional?: string | null;
  /** Products tax code */
  productsTaxCode?: string | null;
  /** Fuel volume */
  fuelVolume?: number | null;
  /** SfgwCard expiry date */
  sfgwCardDateOfExpiry?: string | null;
  /** Three character Site currency ISO code */
  siteCurrencyISOCode?: string | null;
  /** Card ID */
  cardId?: string | null;
  /** ISO8601-compliant UTC datetime of the last update of the EVSE */
  transactionDate?: string | null;
  /** ISO8601-compliant UTC datetime of the last update of the EVSE */
  transactionDateTime?: string | null;
  /** TransactionId */
  transactionId?: string | null;
  /** Type of the connector in the EVSE unit. */
  transactionStatus?: string | null;
  /** Unit of measure */
  unitOfMeasure?: string | null;
  /** VehicleRegistrationNumber */
  vehicleRegistrationNumber?: string | null;
  /** Network Delco name */
  networkDelcoName?: string | null;
  /** ProductGroupName */
  productGroupName?: string | null;
  /** FuelProduct */
  fuelProduct?: string | null;
  /** AccountCustomerName */
  accountCustomerName?: string | null;
  /** PayerName */
  payerName?: string | null;
  /** ISO8601-compliant UTC datetime of the last update of the EVSE */
  transactionTime?: string | null;
  /** TransactionCurrencySymbol */
  transactionCurrency?: string | null;
  /** UnitPrice */
  unitPrice?: number | null;
  /** AuthorisedFlag */
  authorisedFlag?: string | null;
  /** TransactionTimeGMT update of the EVSE */
  transactionTimeGMT?: string | null;
  /** ReasonCode */
  reasonCode?: string | null;
  /** IssuerActionCode */
  issuerActionCode?: string | null;
  /** IssuerActionCodeDescription. */
  issuerActionCodeDescription?: string | null;
  /** DeclinedReason. */
  declinedReason?: string | null;
  /** CardStatusReasonDescription. */
  cardStatusReasonDescription?: string | null;
  /** TransactionCountry */
  transactionCountry?: string | null;
  /** IssuingCollectingCompanyName. */
  issuingCollectingCompanyName?: string | null;
  /** CardIssuerName. */
  cardIssuerName?: string | null;
  /** DriverName. */
  driverName?: string | null;
  /** BearerDescription. */
  bearerDescription?: string | null;
  /** CardCategoryDescription. */
  cardCategoryDescription?: string | null;
  /** CardTypeDescription. */
  cardTypeDescription?: string | null;
  /** CardTokenTypeDescription. */
  cardTokenTypeDescription?: string | null;
  /** EmbossType. */
  embossType?: string | null;
  /** The EVPrintedNumber which can be found on the Shell EV Card */
  eVPrintedNumber?: string | null;
  /** Whether the card type is enabled for RFID (Radio Frequency Identification) */
  isRFID?: boolean | null;
}

export const recentTransactionsSchema: Schema<RecentTransactions> = object({
  colCoCode: ['ColCoCode', optional(nullable(number()))],
  payerNumber: ['PayerNumber', optional(nullable(string()))],
  accountNumber: ['AccountNumber', optional(nullable(string()))],
  cardIssueNumber: ['CardIssueNumber', optional(nullable(string()))],
  collectingCompanyCurrencyCode: [
    'CollectingCompanyCurrencyCode',
    optional(nullable(string())),
  ],
  custDataCustomerEntered: [
    'CustDataCustomerEntered',
    optional(nullable(string())),
  ],
  custDataDriverId: ['CustDataDriverId', optional(nullable(string()))],
  custDataFleetDescription: [
    'CustDataFleetDescription',
    optional(nullable(string())),
  ],
  fleetIdInput: ['FleetIdInput', optional(nullable(string()))],
  amount: ['Amount', optional(nullable(number()))],
  euroshellSiteNumber: ['EuroshellSiteNumber', optional(nullable(string()))],
  incomingProductCode: ['IncomingProductCode', optional(nullable(string()))],
  productCode: ['ProductCode', optional(nullable(string()))],
  productName: ['ProductName', optional(nullable(string()))],
  siteCode: ['SiteCode', optional(nullable(number()))],
  hostingCollectingCompanyName: [
    'HostingCollectingCompanyName',
    optional(nullable(string())),
  ],
  hostingCollectingCompanyNumber: [
    'HostingCollectingCompanyNumber',
    optional(nullable(string())),
  ],
  iccdataTranTypeCode: ['IccdataTranTypeCode', optional(nullable(string()))],
  transactionType: ['TransactionType', optional(nullable(string()))],
  latitude: ['Latitude', optional(nullable(string()))],
  longitude: ['Longitude', optional(nullable(string()))],
  merchantCategory: ['MerchantCategory', optional(nullable(string()))],
  merchantCategoryDescription: [
    'MerchantCategoryDescription',
    optional(nullable(string())),
  ],
  purchasedInCountry: ['PurchasedInCountry', optional(nullable(string()))],
  merchantId: ['MerchantId', optional(nullable(string()))],
  siteName: ['SiteName', optional(nullable(string()))],
  network: ['Network', optional(nullable(string()))],
  delcoCode: ['DelcoCode', optional(nullable(string()))],
  odometerInput: ['OdometerInput', optional(nullable(string()))],
  odometerReadingKm: ['OdometerReadingKm', optional(nullable(string()))],
  odometerReadingMiles: ['OdometerReadingMiles', optional(nullable(string()))],
  cardPAN: ['CardPAN', optional(nullable(string()))],
  pINIndicator: ['PINIndicator', optional(nullable(string()))],
  pOIReceiptNumber: ['POIReceiptNumber', optional(nullable(string()))],
  productsCodeAdditional: [
    'ProductsCodeAdditional',
    optional(nullable(string())),
  ],
  productsTaxCode: ['ProductsTaxCode', optional(nullable(string()))],
  fuelVolume: ['FuelVolume', optional(nullable(number()))],
  sfgwCardDateOfExpiry: ['SfgwCardDateOfExpiry', optional(nullable(string()))],
  siteCurrencyISOCode: ['SiteCurrencyISOCode', optional(nullable(string()))],
  cardId: ['CardId', optional(nullable(string()))],
  transactionDate: ['TransactionDate', optional(nullable(string()))],
  transactionDateTime: ['TransactionDateTime', optional(nullable(string()))],
  transactionId: ['TransactionId', optional(nullable(string()))],
  transactionStatus: ['TransactionStatus', optional(nullable(string()))],
  unitOfMeasure: ['UnitOfMeasure', optional(nullable(string()))],
  vehicleRegistrationNumber: [
    'VehicleRegistrationNumber',
    optional(nullable(string())),
  ],
  networkDelcoName: ['NetworkDelcoName', optional(nullable(string()))],
  productGroupName: ['ProductGroupName', optional(nullable(string()))],
  fuelProduct: ['FuelProduct', optional(nullable(string()))],
  accountCustomerName: ['AccountCustomerName', optional(nullable(string()))],
  payerName: ['PayerName', optional(nullable(string()))],
  transactionTime: ['TransactionTime', optional(nullable(string()))],
  transactionCurrency: ['TransactionCurrency', optional(nullable(string()))],
  unitPrice: ['UnitPrice', optional(nullable(number()))],
  authorisedFlag: ['AuthorisedFlag', optional(nullable(string()))],
  transactionTimeGMT: ['TransactionTimeGMT', optional(nullable(string()))],
  reasonCode: ['ReasonCode', optional(nullable(string()))],
  issuerActionCode: ['IssuerActionCode', optional(nullable(string()))],
  issuerActionCodeDescription: [
    'IssuerActionCodeDescription',
    optional(nullable(string())),
  ],
  declinedReason: ['DeclinedReason', optional(nullable(string()))],
  cardStatusReasonDescription: [
    'CardStatusReasonDescription',
    optional(nullable(string())),
  ],
  transactionCountry: ['TransactionCountry', optional(nullable(string()))],
  issuingCollectingCompanyName: [
    'IssuingCollectingCompanyName',
    optional(nullable(string())),
  ],
  cardIssuerName: ['CardIssuerName', optional(nullable(string()))],
  driverName: ['DriverName', optional(nullable(string()))],
  bearerDescription: ['BearerDescription', optional(nullable(string()))],
  cardCategoryDescription: [
    'CardCategoryDescription',
    optional(nullable(string())),
  ],
  cardTypeDescription: ['CardTypeDescription', optional(nullable(string()))],
  cardTokenTypeDescription: [
    'CardTokenTypeDescription',
    optional(nullable(string())),
  ],
  embossType: ['EmbossType', optional(nullable(string()))],
  eVPrintedNumber: ['EVPrintedNumber', optional(nullable(string()))],
  isRFID: ['IsRFID', optional(nullable(boolean()))],
});
